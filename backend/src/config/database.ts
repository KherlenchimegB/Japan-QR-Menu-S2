import mongoose from "mongoose";

// MongoDB —Ö–æ–ª–±–æ–ª—Ç—ã–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ
const MONGODB_URI =
  process.env.MONGODB_URI || "mongodb://localhost:27017/qr-menu";

// MongoDB —Ö–æ–ª–±–æ–ª—Ç—ã–Ω —Ñ—É–Ω–∫—Ü
export const connectDB = async (): Promise<void> => {
  try {
    const conn = await mongoose.connect(MONGODB_URI, {
      // Mongoose —Ç–æ—Ö–∏—Ä–≥–æ–æ–Ω—É—É–¥
      maxPoolSize: 10, // –•–∞–º–≥–∏–π–Ω –∏—Ö —Ö–æ–ª–±–æ–ª—Ç—ã–Ω —Ç–æ–æ
      serverSelectionTimeoutMS: 5000, // Server —Å–æ–Ω–≥–æ—Ö —Ö—É–≥–∞—Ü–∞–∞
      socketTimeoutMS: 45000, // Socket timeout
      bufferMaxEntries: 0, // Buffer-–∏–π–Ω —Ö–∞–º–≥–∏–π–Ω –∏—Ö —É—Ç–≥–∞
    });

    console.log(`‚úÖ MongoDB —Ö–æ–ª–±–æ–≥–¥–ª–æ–æ: ${conn.connection.host}`);

    // MongoDB —Ö–æ–ª–±–æ–ª—Ç—ã–Ω –∞–ª–¥–∞–∞–Ω—ã event listener
    mongoose.connection.on("error", (err) => {
      console.error("‚ùå MongoDB —Ö–æ–ª–±–æ–ª—Ç—ã–Ω –∞–ª–¥–∞–∞:", err);
    });

    // MongoDB —Ö–æ–ª–±–æ–ª—Ç —Ç–∞—Å–∞—Ä—Å–∞–Ω “Ø–µ–∏–π–Ω event listener
    mongoose.connection.on("disconnected", () => {
      console.log("‚ö†Ô∏è MongoDB —Ö–æ–ª–±–æ–ª—Ç —Ç–∞—Å–∞—Ä–ª–∞–∞");
    });

    // Graceful shutdown
    process.on("SIGINT", async () => {
      await mongoose.connection.close();
      console.log("üõë MongoDB —Ö–æ–ª–±–æ–ª—Ç —Ö–∞–∞–≥–¥–ª–∞–∞");
      process.exit(0);
    });
  } catch (error) {
    console.error("‚ùå MongoDB —Ö–æ–ª–±–æ–ª—Ç–æ–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:", error);
    process.exit(1);
  }
};

// MongoDB —Ö–æ–ª–±–æ–ª—Ç—ã–Ω —Å—Ç–∞—Ç—É—Å —à–∞–ª–≥–∞—Ö
export const isConnected = (): boolean => {
  return mongoose.connection.readyState === 1;
};

// MongoDB —Ö–æ–ª–±–æ–ª—Ç—ã–Ω –º—ç–¥—ç—ç–ª—ç–ª
export const getConnectionInfo = () => {
  return {
    host: mongoose.connection.host,
    port: mongoose.connection.port,
    name: mongoose.connection.name,
    readyState: mongoose.connection.readyState,
  };
};
